From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aaron <bauhd@gmx.net>
Date: Thu, 30 May 2024 23:44:30 +0200
Subject: [PATCH] deactivate commands.yml


diff --git a/src/main/java/net/minecraft/commands/Commands.java b/src/main/java/net/minecraft/commands/Commands.java
index 5af48400f87500166dd889c57a8df0aadb08d43d..74caa0962532f1f55e4f2f59d5830f24198948e3 100644
--- a/src/main/java/net/minecraft/commands/Commands.java
+++ b/src/main/java/net/minecraft/commands/Commands.java
@@ -179,7 +179,7 @@ public class Commands {
         GameModeCommand.register(this.dispatcher);
         GameRuleCommand.register(this.dispatcher);
         GiveCommand.register(this.dispatcher, commandRegistryAccess);
-        HelpCommand.register(this.dispatcher);
+        //HelpCommand.register(this.dispatcher); // Grinder - deactivate commands
         ItemCommands.register(this.dispatcher, commandRegistryAccess);
         KickCommand.register(this.dispatcher);
         KillCommand.register(this.dispatcher);
@@ -214,7 +214,7 @@ public class Commands {
         TickCommand.register(this.dispatcher);
         TimeCommand.register(this.dispatcher);
         TitleCommand.register(this.dispatcher, commandRegistryAccess);
-        TriggerCommand.register(this.dispatcher);
+        //TriggerCommand.register(this.dispatcher); // Grinder - deactivate commands
         WeatherCommand.register(this.dispatcher);
         WorldBorderCommand.register(this.dispatcher);
         if (JvmProfiler.INSTANCE.isAvailable()) {
diff --git a/src/main/java/net/minecraft/server/Main.java b/src/main/java/net/minecraft/server/Main.java
index 581bd217304e0f9e0b2113c335694805dfb4e2a1..b53c06d83cf1f4972040e3b2b0002eb22d6964a7 100644
--- a/src/main/java/net/minecraft/server/Main.java
+++ b/src/main/java/net/minecraft/server/Main.java
@@ -144,11 +144,11 @@ public class Main {
                 configuration.setDefaults(YamlConfiguration.loadConfiguration(new InputStreamReader(Main.class.getClassLoader().getResourceAsStream("configurations/bukkit.yml"), Charsets.UTF_8)));
                 configuration.save(configFile);
 
-                File commandFile = (File) optionset.valueOf("commands-settings");
+                /*File commandFile = (File) optionset.valueOf("commands-settings");
                 YamlConfiguration commandsConfiguration = YamlConfiguration.loadConfiguration(commandFile);
                 commandsConfiguration.options().copyDefaults(true);
                 commandsConfiguration.setDefaults(YamlConfiguration.loadConfiguration(new InputStreamReader(Main.class.getClassLoader().getResourceAsStream("configurations/commands.yml"), Charsets.UTF_8)));
-                commandsConfiguration.save(commandFile);
+                commandsConfiguration.save(commandFile);*/ // Grinder - deactivate commands.yml
                 // CraftBukkit end
                 Main.LOGGER.info("Initialized '{}' and '{}'", path1.toAbsolutePath(), path2.toAbsolutePath());
                 return;
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index b18bde69ec71626284ce75e05bdcf3af2cc59805..663ae307bc84583ab271646e9b7fdb2eeeecc09c 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -421,13 +421,13 @@ public final class CraftServer implements Server {
         this.configuration = YamlConfiguration.loadConfiguration(this.getConfigFile());
         this.configuration.options().copyDefaults(true);
         this.configuration.setDefaults(YamlConfiguration.loadConfiguration(new InputStreamReader(this.getClass().getClassLoader().getResourceAsStream("configurations/bukkit.yml"), Charsets.UTF_8)));
-        ConfigurationSection legacyAlias = null;
+        /*ConfigurationSection legacyAlias = null;
         if (!this.configuration.isString("aliases")) {
             legacyAlias = this.configuration.getConfigurationSection("aliases");
             this.configuration.set("aliases", "now-in-commands.yml");
-        }
+        }*/
         this.saveConfig();
-        if (this.getCommandsConfigFile().isFile()) {
+        /*if (this.getCommandsConfigFile().isFile()) {
             legacyAlias = null;
         }
         this.commandsConfiguration = YamlConfiguration.loadConfiguration(this.getCommandsConfigFile());
@@ -459,7 +459,7 @@ public final class CraftServer implements Server {
 
         this.saveCommandsConfig();
         this.overrideAllCommandBlockCommands = this.commandsConfiguration.getStringList("command-block-overrides").contains("*");
-        this.ignoreVanillaPermissions = this.commandsConfiguration.getBoolean("ignore-vanilla-permissions");
+        this.ignoreVanillaPermissions = this.commandsConfiguration.getBoolean("ignore-vanilla-permissions");*/ // Grinder - deactivate commands.yml
         //this.pluginManager.useTimings(this.configuration.getBoolean("settings.plugin-profiling")); // Paper - we already moved this
         this.overrideSpawnLimits();
         console.autosavePeriod = this.configuration.getInt("ticks-per.autosave");
@@ -480,7 +480,7 @@ public final class CraftServer implements Server {
     }
 
     public boolean getCommandBlockOverride(String command) {
-        return this.overrideAllCommandBlockCommands || this.commandsConfiguration.getStringList("command-block-overrides").contains(command);
+        return this.overrideAllCommandBlockCommands /*|| this.commandsConfiguration.getStringList("command-block-overrides").contains(command) // Grinder - deactivate commands.yml*/;
     }
 
     private File getConfigFile() {
@@ -1041,7 +1041,7 @@ public final class CraftServer implements Server {
         org.spigotmc.WatchdogThread.hasStarted = false; // Paper - Disable watchdog early timeout on reload
         this.reloadCount++;
         this.configuration = YamlConfiguration.loadConfiguration(this.getConfigFile());
-        this.commandsConfiguration = YamlConfiguration.loadConfiguration(this.getCommandsConfigFile());
+        // this.commandsConfiguration = YamlConfiguration.loadConfiguration(this.getCommandsConfigFile()); // Grinder - deactivate commands.yml
 
         this.console.settings = new DedicatedServerSettings(this.console.options);
         DedicatedServerProperties config = this.console.settings.getProperties();
@@ -1104,8 +1104,8 @@ public final class CraftServer implements Server {
         org.spigotmc.SpigotConfig.registerCommands(); // Spigot
         io.papermc.paper.command.PaperCommands.registerCommands(this.console); // Paper
         this.spark.registerCommandBeforePlugins(this); // Paper - spark
-        this.overrideAllCommandBlockCommands = this.commandsConfiguration.getStringList("command-block-overrides").contains("*");
-        this.ignoreVanillaPermissions = this.commandsConfiguration.getBoolean("ignore-vanilla-permissions");
+        /*this.overrideAllCommandBlockCommands = this.commandsConfiguration.getStringList("command-block-overrides").contains("*");
+        this.ignoreVanillaPermissions = this.commandsConfiguration.getBoolean("ignore-vanilla-permissions");*/ // Grinder - deactivate commands.yml
 
         int pollCount = 0;
 
@@ -1808,7 +1808,7 @@ public final class CraftServer implements Server {
 
     @Override
     public Map<String, String[]> getCommandAliases() {
-        ConfigurationSection section = this.commandsConfiguration.getConfigurationSection("aliases");
+        /*ConfigurationSection section = this.commandsConfiguration.getConfigurationSection("aliases");
         Map<String, String[]> result = new LinkedHashMap<String, String[]>();
 
         if (section != null) {
@@ -1825,7 +1825,7 @@ public final class CraftServer implements Server {
             }
         }
 
-        return result;
+        return result;*/ return new LinkedHashMap<>(); // Grinder - deactivate commands.yml
     }
 
     public void removeBukkitSpawnRadius() {
@@ -3129,7 +3129,7 @@ public final class CraftServer implements Server {
                 .map(key -> key.toLowerCase(java.util.Locale.ENGLISH))
                 .collect(java.util.stream.Collectors.toSet());
         getCommandMap().getKnownCommands().keySet().removeIf(removals::contains);
-        File file = getCommandsConfigFile();
+        /*File file = getCommandsConfigFile();
         try {
             commandsConfiguration.load(file);
         } catch (FileNotFoundException ex) {
@@ -3137,7 +3137,7 @@ public final class CraftServer implements Server {
         } catch (IOException | org.bukkit.configuration.InvalidConfigurationException ex) {
             Bukkit.getLogger().log(Level.SEVERE, "Cannot load " + file, ex);
             return false;
-        }
+        }*/ // Grinder - deactivate commands.yml
         commandMap.registerServerAliases();
         return true;
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/Main.java b/src/main/java/org/bukkit/craftbukkit/Main.java
index b3ba6bccdbb08af27916f0c611c60b2595b90164..011576c7567e54c26cd3f831a1cd56aeaf145787 100644
--- a/src/main/java/org/bukkit/craftbukkit/Main.java
+++ b/src/main/java/org/bukkit/craftbukkit/Main.java
@@ -127,11 +127,11 @@ public class Main {
                         .defaultsTo(new File("bukkit.yml"))
                         .describedAs("Yml file");
 
-                this.acceptsAll(Main.asList("C", "commands-settings"), "File for command settings")
+                /*this.acceptsAll(Main.asList("C", "commands-settings"), "File for command settings")
                         .withRequiredArg()
                         .ofType(File.class)
                         .defaultsTo(new File("commands.yml"))
-                        .describedAs("Yml file");
+                        .describedAs("Yml file");*/ // Grinder
 
                 this.acceptsAll(Main.asList("forceUpgrade"), "Whether to force a world upgrade");
                 this.acceptsAll(Main.asList("eraseCache"), "Whether to force cache erase during world upgrade");
diff --git a/src/main/resources/configurations/bukkit.yml b/src/main/resources/configurations/bukkit.yml
index ffa67adc26f087cc991b7f59ef1363843849f5f4..3c05f7c3fba89ef0572bbb7d8a0d73365b115849 100644
--- a/src/main/resources/configurations/bukkit.yml
+++ b/src/main/resources/configurations/bukkit.yml
@@ -41,4 +41,3 @@ ticks-per:
     axolotl-spawns: 1
     ambient-spawns: 1
     autosave: 6000
-aliases: now-in-commands.yml
diff --git a/src/main/resources/configurations/commands.yml b/src/main/resources/configurations/commands.yml
deleted file mode 100644
index 18f54571200e2eca09a39b88f170fe7b99d8618f..0000000000000000000000000000000000000000
--- a/src/main/resources/configurations/commands.yml
+++ /dev/null
@@ -1,16 +0,0 @@
-# This is the commands configuration file for Bukkit.
-# For documentation on how to make use of this file, check out the Bukkit Wiki at
-# https://www.spigotmc.org/go/commands-yml
-# 
-# If you need help on this file, feel free to join us on Discord or leave a message
-# on the forums asking for advice.
-# 
-# Discord: https://www.spigotmc.org/go/discord
-# Forums: https://www.spigotmc.org/
-# Bug tracker: https://www.spigotmc.org/go/bugs
-
-command-block-overrides: []
-ignore-vanilla-permissions: false
-aliases:
-    icanhasbukkit:
-      - "version $1-"
